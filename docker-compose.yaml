version: "3"

services:  

  ## Search engine used to store metrics, logs and traces
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./.docker/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: nc -z localhost 9200 || exit 1
      interval: 5s
      timeout: 2s
      retries: 60
      start_period: 10s
    networks:
      - arithmetic
   
  ## UI that consumes data from Elastic Search
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - arithmetic
    healthcheck:
      test: curl localhost:5601 || exit 1
      interval: 5s
      timeout: 2s
      retries: 60
      start_period: 5s
    depends_on:
      elasticsearch:
        condition: service_healthy

    
  ## Beat that sends metrics to Elastic Search and creates dashboards in Kibana
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.13.0
    user: root
    volumes:      
      - /var/run/docker.sock:/var/run/docker.sock
      - ./elastic/beats/metrics/dev/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    restart: on-failure
    networks:
      - arithmetic
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  ## Beat that sends information about the host uptime to Elastic Search and creates dashboards in Kibana
  heartbeat:
    image: docker.elastic.co/beats/heartbeat:7.13.0
    volumes:      
    - ./elastic/beats/heartbeats/dev/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    environment: 
    - setup.kibana.host=kibana:5601
    networks:
      - arithmetic
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  ## Beat that sends information about logs to Elastic Search
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.1
    volumes:
      - ./elastic/beats/filebeat/dev/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ../shared-volume:/shared-volume
    networks:
      - arithmetic
    environment: 
      - setup.kibana.host=kibana:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  ## Server that receives requests from microservices and sends them to Elastic Search
  apm:
    image: docker.elastic.co/apm/apm-server-oss:7.13.0
    volumes:      
    - ./elastic/apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - "8200:8200"
    restart: on-failure
    networks:
      - arithmetic
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.45.0-rc.0
    volumes:
      - ./prometheus/dev/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - arithmetic
    healthcheck:
      test: nc -z localhost 9090 || exit 1
      interval: 5s
      timeout: 2s
      retries: 60
      start_period: 5s

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - arithmetic
    
networks:
  arithmetic:
    external: true
